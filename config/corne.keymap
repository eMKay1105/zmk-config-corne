/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB        &kp Q            &kp W            &kp F              &kp P                &kp B        &kp J    &kp L                 &kp U               &kp Y             &kp P             &none
&kp BACKSPACE  &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LEFT_SHIFT S  &hml LEFT_CONTROL T  &kp G        &kp M    &hmr RIGHT_CONTROL N  &hmr RIGHT_SHIFT E  &hmr RIGHT_ALT I  &hmr RIGHT_GUI O  &kp SQT
&kp DELETE     &kp Z            &kp X            &kp C              &kp D                &kp V        &kp K    &kp H                 &kp COMMA           &kp DOT           &kp FSLH          &kp ESC
                                                 &key_repeat        &mo 1                &kp SPACE    &kp RET  &mo 2                 &none
            >;
        };

        lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &trans  &trans  &trans  &trans  &trans       &trans   &trans  &trans  &trans  &trans  &none
&trans      &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &kp N6   &kp N7  &kp N8  &kp N9  &kp N0  &trans
&kp DELETE  &trans  &trans  &trans  &trans  &trans       &trans   &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &kp SPACE    &kp RET  &trans  &trans
            >;
        };

        raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB        &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR         &kp RPAR  &none
&kp BACKSPACE  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp F6     &kp MINUS  &kp LBKT   &kp RBKT         &kp F10   &kp GRAVE
&none          &kp F11   &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RIGHT_BRACE  &kp F12   &kp TILDE
                                 &trans    &trans    &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        both {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans   &tog 4
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp F11       &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &kp F12  &trans
                                    &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        gaming {
            bindings = <
&none  &kp F6  &kp Q  &kp W  &kp E  &none    &none  &none  &none  &none  &none  &tog 4
&none  &kp F8  &kp A  &kp S  &kp D  &kp F    &none  &none  &none  &none  &none  &none
&none  &none   &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                      &none  &none  &none    &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
